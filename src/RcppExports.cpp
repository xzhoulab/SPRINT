// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _SPRINT_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// CovariatesAI
SEXP CovariatesAI(SEXP Yin, SEXP Xin, SEXP Din, SEXP tauin, SEXP fixtauin, SEXP tolin);
RcppExport SEXP _SPRINT_CovariatesAI(SEXP YinSEXP, SEXP XinSEXP, SEXP DinSEXP, SEXP tauinSEXP, SEXP fixtauinSEXP, SEXP tolinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Yin(YinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Din(DinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tauin(tauinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fixtauin(fixtauinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tolin(tolinSEXP);
    rcpp_result_gen = Rcpp::wrap(CovariatesAI(Yin, Xin, Din, tauin, fixtauin, tolin));
    return rcpp_result_gen;
END_RCPP
}
// noCovariatesAI
SEXP noCovariatesAI(SEXP Yin, SEXP Xin, SEXP Din, SEXP tauin, SEXP fixtauin, SEXP tolin);
RcppExport SEXP _SPRINT_noCovariatesAI(SEXP YinSEXP, SEXP XinSEXP, SEXP DinSEXP, SEXP tauinSEXP, SEXP fixtauinSEXP, SEXP tolinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type Yin(YinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Din(DinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tauin(tauinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type fixtauin(fixtauinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tolin(tolinSEXP);
    rcpp_result_gen = Rcpp::wrap(noCovariatesAI(Yin, Xin, Din, tauin, fixtauin, tolin));
    return rcpp_result_gen;
END_RCPP
}
// ComputeTestQuantRcpp_nocov
SEXP ComputeTestQuantRcpp_nocov(SEXP yin, SEXP Pyin, SEXP cov_matin, SEXP Din, SEXP tauin);
RcppExport SEXP _SPRINT_ComputeTestQuantRcpp_nocov(SEXP yinSEXP, SEXP PyinSEXP, SEXP cov_matinSEXP, SEXP DinSEXP, SEXP tauinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Pyin(PyinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type cov_matin(cov_matinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Din(DinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tauin(tauinSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeTestQuantRcpp_nocov(yin, Pyin, cov_matin, Din, tauin));
    return rcpp_result_gen;
END_RCPP
}
// ComputeTestQuantRcpp_cov
SEXP ComputeTestQuantRcpp_cov(SEXP yin, SEXP Pyin, SEXP Xin, SEXP cov_matin, SEXP Din, SEXP tauin);
RcppExport SEXP _SPRINT_ComputeTestQuantRcpp_cov(SEXP yinSEXP, SEXP PyinSEXP, SEXP XinSEXP, SEXP cov_matinSEXP, SEXP DinSEXP, SEXP tauinSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type yin(yinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Pyin(PyinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Xin(XinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type cov_matin(cov_matinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type Din(DinSEXP);
    Rcpp::traits::input_parameter< SEXP >::type tauin(tauinSEXP);
    rcpp_result_gen = Rcpp::wrap(ComputeTestQuantRcpp_cov(yin, Pyin, Xin, cov_matin, Din, tauin));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SPRINT_rcpp_hello_world", (DL_FUNC) &_SPRINT_rcpp_hello_world, 0},
    {"_SPRINT_CovariatesAI", (DL_FUNC) &_SPRINT_CovariatesAI, 6},
    {"_SPRINT_noCovariatesAI", (DL_FUNC) &_SPRINT_noCovariatesAI, 6},
    {"_SPRINT_ComputeTestQuantRcpp_nocov", (DL_FUNC) &_SPRINT_ComputeTestQuantRcpp_nocov, 5},
    {"_SPRINT_ComputeTestQuantRcpp_cov", (DL_FUNC) &_SPRINT_ComputeTestQuantRcpp_cov, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SPRINT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
